#1
hormone.data = read.table("http://www.stat.washington.edu/vminin/StatQSci403/Spring2012/data/hormone_data.txt", header = TRUE)
boot.size = 1000
get.diff = function(dat, indices) {
newData = dat[indices,]
newlm = lm(formula = amount ~ lot + hours, data = newData)
return(coef(newlm)[3] - coef(newlm)[2])
}
patch.boot = boot(data = hormone.data, statistic = get.diff, R = boot.size)
(boot.ci(patch.boot, conf=.95, type=c('norm', 'perc', 'bca')))
summary(newlm)
boot.data
library(boot)
library(bootstrap)
#Problem 1
hormone.data = read.table("http://www.stat.washington.edu/vminin/StatQSci403/Spring2012/data/hormone_data.txt", header = TRUE)
B <- 2000
B.coef <- matrix(0, B,4)
colnames(B.coef) = c("LotA", "hours", "LotB", "LotC")
n <- dim(hormone.data)[1]
for (i in 1:B){
boot.indices <- sample(1:n, size=n,replace=TRUE)
boot.data = hormone.data[boot.indices,]
boot.model3 = lm(formula = amount ~ hours + lot,
data=boot.data)
B.coef[i,] = coef(boot.model3)
}
diff.stat = function(data, indices){
return (mean(data[indices,3] - data[indices,4]))
}
(patch.boot <- boot(data=B.coef, statistic=diff.stat,
R=2000))
boot.ci(patch.boot, conf=.95, type=c('norm', 'perc', 'bca'))
newlm = lm(formula = amount ~ lot + hours, data = newData)
library(bootstrap)
library(boot)
#1
hormone.data = read.table("http://www.stat.washington.edu/vminin/StatQSci403/Spring2012/data/hormone_data.txt", header = TRUE)
boot.size = 1000
get.diff = function(dat, indices) {
newData = dat[indices,]
newlm = lm(formula = amount ~ lot + hours, data = newData)
return(coef(newlm)[3] - coef(newlm)[2])
}
patch.boot <- boot(data = hormone.data, statistic = get.diff, R = boot.size)
(boot.ci(patch.boot, conf=.95, type=c('norm', 'perc', 'bca')))
#7.5
B = 2000
getRate = function(dat,indices) {
newdata = dat[indices,1]
return(mean(newdata))
}
result <- boot(data = aircondit, statistic = getRate, R = 2000)
(boot.ci(result,conf = .95, type = c("norm", "basic", "perc","bca")))
#3
B<- 2000
n <- nrow(aircondit)
lambda.b <- numeric(B)
x.bar <- mean(aircondit$hours)
lambda.hat <- 1/x.bar
counts = 0
for (sim in 1:1000) {
data = rexp(n, lambda.hat)
for (k in 1:B) {
i <- sample(1:n, size=n, replace=TRUE)
x = data[i]
x.bar = mean(x)
lambda.b[k] = 1/x.bar
}
quant = quantile(lambda.b, c(.025, .975))
if (quant[1] < lambda.hat && quant[2] > (lambda.hat)) {
counts = counts + 1
}
}
library(bootstrap)
library(boot)
#1
hormone.data = read.table("http://www.stat.washington.edu/vminin/StatQSci403/Spring2012/data/hormone_data.txt", header = TRUE)
boot.size = 1000
get.diff = function(dat, indices) {
newData = dat[indices,]
newlm = lm(formula = amount ~ lot + hours, data = newData)
return(coef(newlm)[3] - coef(newlm)[2])
}
patch.boot <- boot(data = hormone.data, statistic = get.diff, R = boot.size)
(boot.ci(patch.boot, conf=.95, type=c('norm', 'perc', 'bca')))
#7.5
B = 2000
getRate = function(dat,indices) {
newdata = dat[indices,1]
return(mean(newdata))
}
result <- boot(data = aircondit, statistic = getRate, R = 2000)
(boot.ci(result,conf = .95, type = c("norm", "basic", "perc","bca")))
#3
B<- 2000
n <- nrow(aircondit)
lambda.b <- numeric(B)
x.bar <- mean(aircondit$hours)
lambda.hat <- 1/x.bar
counts = 0
for (sim in 1:1000) {
data = rexp(n, lambda.hat)
for (k in 1:B) {
i <- sample(1:n, size=n, replace=TRUE)
x = data[i]
x.bar = mean(x)
lambda.b[k] = 1/x.bar
}
quant = quantile(lambda.b, c(.025, .975))
if (quant[1] < lambda.hat && quant[2] > (lambda.hat)) {
counts = counts + 1
}
}
(counts)
library(bootstrap)
library(boot)
#Problem 1
hormone.data = read.table("http://www.stat.washington.edu/vminin/StatQSci403/Spring2012/data/hormone_data.txt", header = TRUE)
boot.size = 1000
get.diff = function(dat, indices) {
newData = dat[indices,]
newlm = lm(formula = amount ~ lot + hours, data = newData)
return(coef(newlm)[3] - coef(newlm)[2])
}
patch.boot <- boot(data = hormone.data, statistic = get.diff, R = boot.size)
(boot.ci(patch.boot, conf=.95, type=c('norm', 'perc', 'bca')))
#Problem 7.5
#Problem 7.5
B = 2000
getRate = function(dat,indices) {
newdata = dat[indices,1]
return(mean(newdata))
}
result <- boot(data = aircondit, statistic = getRate, R = 2000)
(boot.ci(result,conf = .95, type = c("norm", "basic", "perc","bca")))
#Problem 3
B<- 2000
n <- nrow(aircondit)
lambda.b <- numeric(B)
x.bar <- mean(aircondit$hours)
lambda.hat <- 1/x.bar
counts = 0
for (sim in 1:1000) {
data = rexp(n, lambda.hat)
for (k in 1:B) {
i <- sample(1:n, size=n, replace=TRUE)
x = data[i]
x.bar = mean(x)
lambda.b[k] = 1/x.bar
}
quant = quantile(lambda.b, c(.025, .975))
if (quant[1] < lambda.hat && quant[2] > (lambda.hat)) {
counts = counts + 1
}
}
(counts)
library(bootstrap)
library(boot)
#Problem 1
hormone.data = read.table("http://www.stat.washington.edu/vminin/StatQSci403/Spring2012/data/hormone_data.txt", header = TRUE)
boot.size = 1000
get.diff = function(dat, indices) {
newData = dat[indices,]
newlm = lm(formula = amount ~ lot + hours, data = newData)
return(coef(newlm)[3] - coef(newlm)[2])
}
patch.boot <- boot(data = hormone.data, statistic = get.diff, R = boot.size)
(boot.ci(patch.boot, conf=.95, type=c('norm', 'perc', 'bca')))
library(boot)
library(bootstrap)
#Problem 1
hormone.data = read.table("http://www.stat.washington.edu/vminin/StatQSci403/Spring2012/data/hormone_data.txt", header = TRUE)
B <- 2000
B.coef <- matrix(0, B,4)
colnames(B.coef) = c("LotA", "hours", "LotB", "LotC")
n <- dim(hormone.data)[1]
{
for (i in 1:B){
boot.indices <- sample(1:n, size=n,replace=TRUE)
boot.data = hormone.data[boot.indices,]
boot.model3 = lm(formula = amount ~ hours + lot,
data=boot.data)
B.coef[i,] = coef(boot.model3)
}
}
diff.stat = function(data, indices){
return (mean(data[indices,3] - data[indices,4]))
}
{
(patch.boot <- boot(data=B.coef, statistic=diff.stat,
R=2000))
boot.ci(patch.boot, conf=.95, type=c('norm', 'perc', 'bca'))
}
B.coef
View(B.coef)
View(B.coef)
library(bootstrap)
library(boot)
#Problem 1
hormone.data = read.table("http://www.stat.washington.edu/vminin/StatQSci403/Spring2012/data/hormone_data.txt", header = TRUE)
boot.size = 1000
get.diff = function(dat, indices) {
newData = dat[indices,]
newlm = lm(formula = amount ~ lot + hours, data = newData)
return(coef(newlm)[3] - coef(newlm)[4])
}
patch.boot <- boot(data = hormone.data, statistic = get.diff, R = boot.size)
(boot.ci(patch.boot, conf=.95, type=c('norm', 'perc', 'bca')))
library(bootstrap)
library(boot)
#Problem 1
hormone.data = read.table("http://www.stat.washington.edu/vminin/StatQSci403/Spring2012/data/hormone_data.txt", header = TRUE)
boot.size = 1000
get.diff = function(dat, indices) {
newData = dat[indices,]
newlm = lm(formula = amount ~ lot + hours, data = newData)
return(coef(newlm)[3] - coef(newlm)[2])
}
patch.boot <- boot(data = hormone.data, statistic = get.diff, R = boot.size)
(boot.ci(patch.boot, conf=.95, type=c('norm', 'perc', 'bca')))
#Problem 7.5
boot.model3
coef(boot.model3)[2]
coef(boot.model3)[3]
coef(boot.model3)[4]
coef(boot.model3)[1]
library(boot)
library(bootstrap)
#Problem 1
hormone.data = read.table("http://www.stat.washington.edu/vminin/StatQSci403/Spring2012/data/hormone_data.txt", header = TRUE)
B <- 2000
B.coef <- matrix(0, B,4)
colnames(B.coef) = c("LotA", "LotB","hours", "LotC")
n <- dim(hormone.data)[1]
{
for (i in 1:B){
boot.indices <- sample(1:n, size=n,replace=TRUE)
boot.data = hormone.data[boot.indices,]
boot.model3 = lm(formula = amount ~ hours + lot,
data=boot.data)
B.coef[i,] = coef(boot.model3)
}
}
diff.stat = function(data, indices){
return (mean(data[indices,3] - data[indices,4]))
}
{
(patch.boot <- boot(data=B.coef, statistic=diff.stat,
R=2000))
boot.ci(patch.boot, conf=.95, type=c('norm', 'perc', 'bca'))
}
coef(boot.model3)[4]
coef(boot.model3)[3]
coef(boot.model3)[2]
library(bootstrap)
library(boot)
#Problem 1
hormone.data = read.table("http://www.stat.washington.edu/vminin/StatQSci403/Spring2012/data/hormone_data.txt", header = TRUE)
boot.size = 1000
get.diff = function(dat, indices) {
newData = dat[indices,]
newlm = lm(formula = amount ~ lot + hours, data = newData)
return(coef(newlm)[3] - coef(newlm)[4])
}
patch.boot <- boot(data = hormone.data, statistic = get.diff, R = boot.size)
(boot.ci(patch.boot, conf=.95, type=c('norm', 'perc', 'bca')))
library(bootstrap)
library(boot)
#Problem 1
hormone.data = read.table("http://www.stat.washington.edu/vminin/StatQSci403/Spring2012/data/hormone_data.txt", header = TRUE)
boot.size = 1000
get.diff = function(dat, indices) {
newData = dat[indices,]
newlm = lm(formula = amount ~ lot + hours, data = newData)
return(coef(newlm)[2] - coef(newlm)[3])
}
patch.boot <- boot(data = hormone.data, statistic = get.diff, R = boot.size)
(boot.ci(patch.boot, conf=.95, type=c('norm', 'perc', 'bca')))
library(bootstrap)
library(boot)
#Problem 1
hormone.data = read.table("http://www.stat.washington.edu/vminin/StatQSci403/Spring2012/data/hormone_data.txt", header = TRUE)
boot.size = 1000
get.diff = function(dat, indices) {
newData = dat[indices,]
newlm = lm(formula = amount ~ lot + hours, data = newData)
return(coef(newlm)[2] - coef(newlm)[3])
}
patch.boot <- boot(data = hormone.data, statistic = get.diff, R = boot.size)
(boot.ci(patch.boot, conf=.95, type=c('norm', 'perc', 'bca')))
library(boot)
library(bootstrap)
hormone.data = read.table("http://www.stat.washington.edu/vminin/StatQSci403/Spring2012/data/hormone_data.txt", header = TRUE)
linear.model=lm(formula=hormone.data$amount~hormone.data$hours+hormone.data$lot)
summary(linear.model)
boot.size=1000
boot.coef=matrix(0,boot.size,4)
colnames(boot.coef)=c("Intercept(Lot A)","hours","Lob B offset","Lot C offset")
num.subjects=dim(hormone.data)[1]
for(i in 1:boot.size){
boot.data=hormone.data[sample(1:num.subjects,size=num.subjects,replace=TRUE),]
boot.model=lm(formula=boot.data$amount~boot.data$hours+boot.data$lot)
boot.coef[i,]=coef(boot.model)
}
sample.b=boot.coef[,3]
sample.c=boot.coef[,4]
mean(sample.b)-mean(sample.c)
#[1] 0.6070694
mean.diff=sample.b-sample.c
t.test(mean.diff)
boot.ci=quantile(mean.diff,probs=c(0.025,0.975))
boot.ci
View(boot.coef)
View(boot.coef)
library(bootstrap)library(boot)#1hormone.data = read.table("http://www.stat.washington.edu/vminin/StatQSci403/Spring2012/data/hormone_data.txt", header = TRUE)boot.size = 1000(patch.boot = boot(hormone.data, get.diff, boot.size)) get.diff = function(dat, indices) {  newData = dat[indices,]  newlm = lm(formula = amount ~ lot + hours, data = newData)  return(coef(newlm)[2] - coef(newlm)[3])}(boot.ci(patch.boot, conf=.95, type=c('norm', 'perc', 'bca')))#7.5B = 2000getRate = function(dat,indices) {  newdata = dat[indices,]  return(mean(newdata))}result = boot(aircondit,getRate,1000)(boot.ci(result,conf = .95, type = c('norm', 'perc', 'bca')))#3B = 2000n = nrow(aircondit)lambda.b = numeric(B)x.bar = mean(aircondit$hours)lambda.hat = 1/x.barcounts = 0for (sim in 1:1000) {  data = rexp(n, lambda.hat)  for (k in 1:B) {    i = sample(1:n, size=n, replace=TRUE)        x = data[i]    x.bar = mean(x)    lambda.b[k] = 1/x.bar  }  quant = quantile(lambda.b, c(.025, .975))  if (quant[1] < lambda.hat && quant[2] > lambda.hat) {    counts = counts + 1  }}(counts)
library(bootstrap)library(boot)#1hormone.data = read.table("http://www.stat.washington.edu/vminin/StatQSci403/Spring2012/data/hormone_data.txt", header = TRUE)boot.size = 1000(patch.boot = boot(hormone.data, get.diff, boot.size)) get.diff = function(dat, indices) {  newData = dat[indices,]  newlm = lm(formula = amount ~ lot + hours, data = newData)  return(coef(newlm)[2] - coef(newlm)[3])}(boot.ci(patch.boot, conf=.95, type=c('norm', 'perc', 'bca')))#7.5B = 2000getRate = function(dat,indices) {  newdata = dat[indices,]  return(mean(newdata))}result = boot(aircondit,getRate,1000)(boot.ci(result,conf = .95, type = c('norm', 'perc', 'bca')))#3B = 2000n = nrow(aircondit)lambda.b = numeric(B)x.bar = mean(aircondit$hours)lambda.hat = 1/x.barcounts = 0for (sim in 1:1000) {  data = rexp(n, lambda.hat)  for (k in 1:B) {    i = sample(1:n, size=n, replace=TRUE)        x = data[i]    x.bar = mean(x)    lambda.b[k] = 1/x.bar  }  quant = quantile(lambda.b, c(.025, .975))  if (quant[1] < lambda.hat && quant[2] > lambda.hat) {    counts = counts + 1  }}(counts)
library(bootstrap)
library(boot)
#1
hormone.data = read.table("http://www.stat.washington.edu/vminin/StatQSci403/Spring2012/data/hormone_data.txt", header = TRUE)
boot.size = 1000
(patch.boot = boot(hormone.data, get.diff, boot.size))
get.diff = function(dat, indices) {
newData = dat[indices,]
newlm = lm(formula = amount ~ lot + hours, data = newData)
return(coef(newlm)[2] - coef(newlm)[3])
}
(boot.ci(patch.boot, conf=.95, type=c('norm', 'perc', 'bca')))
#7.5
B = 2000
getRate = function(dat,indices) {
newdata = dat[indices,]
return(mean(newdata))
}
result = boot(aircondit,getRate,1000)
(boot.ci(result,conf = .95, type = c('norm', 'perc', 'bca')))
#3
B = 2000
n = nrow(aircondit)
lambda.b = numeric(B)
x.bar = mean(aircondit$hours)
lambda.hat = 1/x.bar
counts = 0
for (sim in 1:1000) {
data = rexp(n, lambda.hat)
for (k in 1:B) {
i = sample(1:n, size=n, replace=TRUE)
x = data[i]
x.bar = mean(x)
lambda.b[k] = 1/x.bar
}
quant = quantile(lambda.b, c(.025, .975))
if (quant[1] < lambda.hat && quant[2] > lambda.hat) {
counts = counts + 1
}
}
(counts)
library(boot)
library(bootstrap)
incident.data = read.csv("rear end incident distribution on I-5.csv",head = TRUE)
number.kill <- incident.data$Kill
number.injury <- incident.data$Injury
number.vehiche <- incident.data$Vehicle.involved
numbers <- incident.data$Numbers
mile <- incident.data$Millpost
mean.injury <- mean(number.injury)
mean.vehiche <- mean(number.vehiche)
mean.kill <- mean(number.kill)
n = sum(numbers)
barplot(number.injury, width = 10)
barplot(number.vehiche, width = 10)
#Most accident are from Everett to Olympia.(Olympia, Tacoma, Seattle, Everett)
#bootstrap: I need a mean number for both.
n <- 28
B <- 2000
theta.a <- numeric(B)
# set up storage for the sampled indices
indices <- matrix(0, nrow = B, ncol = n)
# jackknife-after-bootstrap step 1: run the bootstrap
for (b in 1:B) {
i <- sample(1:n, size = n, replace = TRUE)
Incident <- mean(number.injury[i])
theta.a[b] <- Incident
}
se <- sd(theta.a)
u = mean(theta.a)
(u + 1.96*se)
(u - 1.96*se)
sd(number.injury)
#bootstrap: I need a mean number for both.
n <- 28
B <- 2000
theta.b <- numeric(B)
# set up storage for the sampled indices
indices <- matrix(0, nrow = B, ncol = n)
# jackknife-after-bootstrap step 1: run the bootstrap
for (b in 1:B) {
i <- sample(1:n, size = n, replace = TRUE)
Number <- mean(numbers[i])
theta.b[b] <- Number
}
sd(theta.b)
sd(numbers)
library(boot)
library(bootstrap)
incident.data = read.csv("rear end incident distribution on I-5.csv",head = TRUE)
number.kill <- incident.data$Kill
number.injury <- incident.data$Injury
number.vehiche <- incident.data$Vehicle.involved
numbers <- incident.data$Numbers
mile <- incident.data$Millpost
mean.injury <- mean(number.injury)
mean.vehiche <- mean(number.vehiche)
mean.kill <- mean(number.kill)
n = sum(numbers)
barplot(number.injury, width = 10)
barplot(number.vehiche, width = 10)
#Most accident are from Everett to Olympia.(Olympia, Tacoma, Seattle, Everett)
#bootstrap: I need a mean number for both.
n <- 28
B <- 2000
theta.a <- numeric(B)
# set up storage for the sampled indices
indices <- matrix(0, nrow = B, ncol = n)
# jackknife-after-bootstrap step 1: run the bootstrap
for (b in 1:B) {
i <- sample(1:n, size = n, replace = TRUE)
Incident <- mean(number.injury[i])
theta.a[b] <- Incident
}
se <- sd(theta.a)
u = mean(theta.a)
(u + 1.96*se)
(u - 1.96*se)
sd(number.injury)
#bootstrap: I need a mean number for both.
n <- 28
B <- 2000
theta.b <- numeric(B)
# set up storage for the sampled indices
indices <- matrix(0, nrow = B, ncol = n)
# jackknife-after-bootstrap step 1: run the bootstrap
for (b in 1:B) {
i <- sample(1:n, size = n, replace = TRUE)
Number <- mean(numbers[i])
theta.b[b] <- Number
}
library(boot)
library(bootstrap)
incident.data = read.csv("rear end incident distribution on I-5.csv",head = TRUE)
result = function(i,j,k){
answer = 0.35*i - 0.25*j + 0.7*k
return (answer)
}
result(1500,0,1000)
result(4500,2,200)
result(4500,4,480)
result(1500,2,1000)
result(4500,4,480)
result(8000,6,582)
result(4500,8,411)
result(17500,9,1000)
result(8000,7,582)
result(4500,4,582)
result(8000,11,1000)
result(17500,9,1000)
result(17500,7,1000)
result(8000,1,1000)
result(17500,7,900)
result(17500,9,1000)
result(17500,7,772)
result(8000,6,772)
result(8000,12,582)
result(8000,7,772)
result(10000,4,772)
result(6000,5,582)
result(6000,11,411)
result(8000,6,200)
result(4500,4,582)
result(4500,4,582)
result(4500,4,582)
result(4500,4,582)
result(4500,4,582)
result(4500,4,582)
}
result(1500,0,1000)
result(4500,2,200)
result(4500,4,480)
result(1500,2,1000)
result(4500,4,480)
result(8000,6,582)
result(4500,8,411)
result(17500,9,1000)
result(8000,7,582)
result(4500,4,582)
result(8000,11,1000)
result(17500,9,1000)
result(17500,7,1000)
result(8000,1,1000)
result(17500,7,900)
result(17500,9,1000)
result(17500,7,772)
result(8000,6,772)
result(8000,12,582)
result(8000,7,772)
result(10000,4,772)
result(6000,5,582)
result(6000,11,411)
result(8000,6,200)
result(4500,4,582)
result(4500,4,582)
